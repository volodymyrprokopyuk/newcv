#!/usr/bin/env runghc
import Development.Shake
import Development.Shake.Command
import Development.Shake.FilePath
import Development.Shake.Util

main :: IO ()
main = shakeArgs shakeOptions { shakeFiles = ".build/" } $ do
  want [ "pdf/cv-volodymyr.pdf", "txt/cv-volodymyr.txt"  ]

  "tex/cv-*.tex" %> \ target -> do
    putNormal "** rendering TeX"
    let source = ("json" </>) . (-<.> "json") . takeFileName $ target
    need [ source, "tex/cv.tex", "main.js", "bin/render" ]
    cmd "bash -c"
      [ "./bin/render --source=" ++ source ++ " --target=" ++ target ]

  "pdf/*.pdf" %> \ target -> do
    putNormal "** compiling PDF"
    let source = ("tex" </>) . (-<.> "tex") . takeFileName $ target
    need [ source ]
    cmd "bash -c"
      [ "cd pdf && context --path=../tex " ++ ".." </> source ]

  "txt/cv-*.txt" %> \ target -> do
    putNormal "** rendering TXT"
    let source = ("json" </>) . (-<.> "json") . takeFileName $ target
    need [ source, "txt/cv.txt", "main.js", "bin/render" ]
    cmd "bash -c"
      [ "./bin/render --source=" ++ source ++ " --target=" ++ target ]

  "upload" ~> do
    cmd "bash -c" [ "cp json/cv-*.json ~/Dropbox/git-newcv"
      ++ "; cp tex/cv-*.tex ~/Dropbox/git-newcv"
      ++ "; cp pdf/cv-*.pdf ~/Dropbox/git-newcv"
      ++ "; cp txt/cv-*.txt ~/Dropbox/git-newcv" ]

  "clean" ~> do
    putNormal "** removing PDF"
    removeFilesAfter "pdf" [ "cv-*.pdf", "cv-*.log", "cv-*.tuc" ]
    removeFilesAfter "tex" [ "cv-*.tex" ]
    removeFilesAfter "txt" [ "cv-*.txt" ]
